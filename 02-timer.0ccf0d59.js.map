{"mappings":"AAAA,MAAMA,EAAcC,SAASC,cAAc,sBACrCC,EAAYF,SAASC,cAAc,eACnCE,EAAaH,SAASC,cAAc,gBACpCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAeL,SAASC,cAAc,kBAE5C,IAAIK,EAAsB,KAqC1B,SAASC,EAAgBC,GACvB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGnCX,EAAYY,iBAAiB,SAvC7B,WACE,MAAMC,EAAUZ,SAASa,eAAe,mBAAmBL,MACrDM,EAAa,IAAIC,KAAKH,GAASI,UAErCjB,EAAYkB,UAAW,EACvBjB,SAASa,eAAe,mBAAmBI,UAAW,EAEtDX,EAAsBY,aAAY,KAChC,MAAMC,GAAc,IAAIJ,MAAOC,UACzBI,EAAiBN,EAAaK,EAEpC,GAAIC,EAAiB,EAAG,CACtB,MAAMC,EAAOC,KAAKC,MAAMH,EAAkB,OACpCI,EAAQF,KAAKC,MACjBH,EAAmB,MAAyB,MAExCK,EAAUH,KAAKC,MACnBH,EAAmB,KAAoB,KAEnCM,EAAUJ,KAAKC,MAAMH,EAAmB,IAAc,KAE5DlB,EAAUyB,YAAcpB,EAAgBc,GACxClB,EAAWwB,YAAcpB,EAAgBiB,GACzCpB,EAAauB,YAAcpB,EAAgBkB,GAC3CpB,EAAasB,YAAcpB,EAAgBmB,GAEvCN,GAAkB,GACpBQ,cAActB,E,MAGhBsB,cAActB,EAAoB,GAEnC,I,IASL,MAAMuB,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIjB,KACjBkB,gBAAiB,EACjBC,QAAQC,GACeA,EAAc,IACf,IAAIpB,MACtBqB,OAAOC,MAAM,sCACbtC,EAAYkB,UAAW,GAEvBlB,EAAYkB,UAAW,C,GAK7BqB,UAAU,mBAAoBT","sources":["src/js/02-timer.js"],"sourcesContent":["const startButton = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet countdownIntervalId = null;\n\nfunction startCountdown() {\n  const endDate = document.getElementById('datetime-picker').value;\n  const targetDate = new Date(endDate).getTime();\n\n  startButton.disabled = true;\n  document.getElementById('datetime-picker').disabled = true;\n\n  countdownIntervalId = setInterval(() => {\n    const currentDate = new Date().getTime();\n    const timeDifference = targetDate - currentDate;\n\n    if (timeDifference > 0) {\n      const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor(\n        (timeDifference % (1000 * 60 * 60)) / (1000 * 60)\n      );\n      const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n\n      daysValue.textContent = formatTimeValue(days);\n      hoursValue.textContent = formatTimeValue(hours);\n      minutesValue.textContent = formatTimeValue(minutes);\n      secondsValue.textContent = formatTimeValue(seconds);\n\n      if (timeDifference <= 0) {\n        clearInterval(countdownIntervalId);\n      }\n    } else {\n      clearInterval(countdownIntervalId);\n    }\n  }, 1000);\n}\n\nfunction formatTimeValue(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartButton.addEventListener('click', startCountdown);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      window.alert('Please choose a date in the future');\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n"],"names":["$40d383fb392a7037$var$startButton","document","querySelector","$40d383fb392a7037$var$daysValue","$40d383fb392a7037$var$hoursValue","$40d383fb392a7037$var$minutesValue","$40d383fb392a7037$var$secondsValue","$40d383fb392a7037$var$countdownIntervalId","$40d383fb392a7037$var$formatTimeValue","value","String","padStart","addEventListener","endDate","getElementById","targetDate","Date","getTime","disabled","setInterval","currentDate","timeDifference","days","Math","floor","hours","minutes","seconds","textContent","clearInterval","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","window","alert","flatpickr"],"version":3,"file":"02-timer.0ccf0d59.js.map"}
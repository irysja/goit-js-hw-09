{"mappings":"YAAA,IAAMA,EAAcC,SAASC,cAAc,sBACrCC,EAAYF,SAASC,cAAc,eAKrCE,GAJeH,SAASC,cAAc,gBACrBD,SAASC,cAAc,kBACvBD,SAASC,cAAc,kBAElB,MAoC1B,SAASG,EAAgBC,GACvB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGnCR,EAAYS,iBAAiB,SAtC7B,WACI,IAAMC,EAAUT,SAASU,eAAe,mBAAmBL,MACrDM,EAAa,IAAIC,KAAKH,GAASI,UAErCV,EAAsBW,aAAY,WAChC,IAAMC,GAAc,IAAIH,MAAOC,UACzBG,EAAiBL,EAAaI,EAEpC,GAAIC,EAAiB,EAAG,CACtB,IAAMC,EAAOC,KAAKC,MAAMH,EAAkB,OACpCI,EAAQF,KAAKC,MACjBH,EAAmB,MAAyB,MAExCK,EAAUH,KAAKC,MACnBH,EAAmB,KAAoB,KAEnCM,EAAUJ,KAAKC,MAAMH,EAAmB,IAAc,KAEtDO,EAAgBnB,EAAgBa,GAAQ,IACxBb,EAAgBgB,GAAS,IACzBhB,EAAgBiB,GAAW,IAC3BjB,EAAgBkB,GAEtCpB,EAAUsB,YAAcD,EAEpBP,GAAkB,GACpBS,cAActB,E,MAGhBsB,cAActB,E,GAEf,I,IASP,IAAMuB,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIjB,KACjBkB,gBAAiB,EACjBC,QAAA,SAAQC,GACeA,EAAc,IACf,IAAIpB,MACtBqB,OAAOC,MAAM,sCACbnC,EAAYoC,UAAW,GAEvBpC,EAAYoC,UAAW,C,GAK7BC,UAAU,mBAAoBV,E","sources":["src/js/02-timer.js"],"sourcesContent":["const startButton = document.querySelector('button[data-start]');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minutesValue = document.querySelector('[data-minutes]');\nconst secondsValue = document.querySelector('[data-seconds]');\n\nlet countdownIntervalId = null;\n\nfunction startCountdown() {\n    const endDate = document.getElementById('datetime-picker').value;\n    const targetDate = new Date(endDate).getTime();\n  \n    countdownIntervalId = setInterval(() => {\n      const currentDate = new Date().getTime();\n      const timeDifference = targetDate - currentDate;\n  \n      if (timeDifference > 0) {\n        const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(\n          (timeDifference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        );\n        const minutes = Math.floor(\n          (timeDifference % (1000 * 60 * 60)) / (1000 * 60)\n        );\n        const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\n  \n        const formattedTime = formatTimeValue(days) + ':' +\n                              formatTimeValue(hours) + ':' +\n                              formatTimeValue(minutes) + ':' +\n                              formatTimeValue(seconds);\n  \n        daysValue.textContent = formattedTime;\n        \n        if (timeDifference <= 0) {\n          clearInterval(countdownIntervalId);\n        }\n      } else {\n        clearInterval(countdownIntervalId);\n      }\n    }, 1000);\n  }\n\nfunction formatTimeValue(value) {\n  return String(value).padStart(2, '0');\n}\n\nstartButton.addEventListener('click', startCountdown);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      window.alert(\"Please choose a date in the future\");\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n \n      "],"names":["$84b9dae4df53835d$var$startButton","document","querySelector","$84b9dae4df53835d$var$daysValue","$84b9dae4df53835d$var$countdownIntervalId","$84b9dae4df53835d$var$formatTimeValue","value","String","padStart","addEventListener","endDate","getElementById","targetDate","Date","getTime","setInterval","currentDate","timeDifference","days","Math","floor","hours","minutes","seconds","formattedTime","textContent","clearInterval","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","window","alert","disabled","flatpickr"],"version":3,"file":"02-timer.f86c6061.js.map"}